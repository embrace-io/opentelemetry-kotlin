public final class io/embrace/opentelemetry/kotlin/OpenTelemetryInstanceK2JKt {
	public static final fun compatWithOtelJava (Lio/embrace/opentelemetry/kotlin/OpenTelemetryInstance;Lio/opentelemetry/api/OpenTelemetry;)Lio/embrace/opentelemetry/kotlin/OpenTelemetry;
	public static final fun kotlinApi (Lio/embrace/opentelemetry/kotlin/OpenTelemetryInstance;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lio/embrace/opentelemetry/kotlin/Clock;)Lio/embrace/opentelemetry/kotlin/OpenTelemetry;
	public static synthetic fun kotlinApi$default (Lio/embrace/opentelemetry/kotlin/OpenTelemetryInstance;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lio/embrace/opentelemetry/kotlin/Clock;ILjava/lang/Object;)Lio/embrace/opentelemetry/kotlin/OpenTelemetry;
}

public final class io/embrace/opentelemetry/kotlin/k2j/ClockAdapter : io/embrace/opentelemetry/kotlin/Clock {
	public fun <init> ()V
	public fun <init> (Lio/opentelemetry/sdk/common/Clock;)V
	public synthetic fun <init> (Lio/opentelemetry/sdk/common/Clock;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun now ()J
}

public final class io/embrace/opentelemetry/kotlin/k2j/tracing/SpanAdapter : io/embrace/opentelemetry/kotlin/tracing/model/Span, io/opentelemetry/context/ImplicitContextKeyed {
	public fun <init> (Lio/opentelemetry/api/trace/Span;Lio/embrace/opentelemetry/kotlin/Clock;Lio/embrace/opentelemetry/kotlin/tracing/model/SpanContext;Lio/embrace/opentelemetry/kotlin/tracing/model/SpanKind;J)V
	public fun addEvent (Ljava/lang/String;Ljava/lang/Long;Lkotlin/jvm/functions/Function1;)V
	public fun addLink (Lio/embrace/opentelemetry/kotlin/tracing/model/SpanContext;Lkotlin/jvm/functions/Function1;)V
	public fun attributes ()Ljava/util/Map;
	public fun end ()V
	public fun end (J)V
	public fun events ()Ljava/util/List;
	public final fun getImpl ()Lio/opentelemetry/api/trace/Span;
	public fun getName ()Ljava/lang/String;
	public fun getParent ()Lio/embrace/opentelemetry/kotlin/tracing/model/SpanContext;
	public fun getSpanContext ()Lio/embrace/opentelemetry/kotlin/tracing/model/SpanContext;
	public fun getSpanKind ()Lio/embrace/opentelemetry/kotlin/tracing/model/SpanKind;
	public fun getStartTimestamp ()J
	public fun getStatus ()Lio/embrace/opentelemetry/kotlin/tracing/StatusCode;
	public fun isRecording ()Z
	public fun links ()Ljava/util/List;
	public fun makeCurrent ()Lio/opentelemetry/context/Scope;
	public fun setBooleanAttribute (Ljava/lang/String;Z)V
	public fun setBooleanListAttribute (Ljava/lang/String;Ljava/util/List;)V
	public fun setDoubleAttribute (Ljava/lang/String;D)V
	public fun setDoubleListAttribute (Ljava/lang/String;Ljava/util/List;)V
	public fun setLongAttribute (Ljava/lang/String;J)V
	public fun setLongListAttribute (Ljava/lang/String;Ljava/util/List;)V
	public fun setName (Ljava/lang/String;)V
	public fun setStatus (Lio/embrace/opentelemetry/kotlin/tracing/StatusCode;)V
	public fun setStringAttribute (Ljava/lang/String;Ljava/lang/String;)V
	public fun setStringListAttribute (Ljava/lang/String;Ljava/util/List;)V
	public fun storeInContext (Lio/opentelemetry/context/Context;)Lio/opentelemetry/context/Context;
}

public final class io/embrace/opentelemetry/kotlin/k2j/tracing/SpanContextAdapter : io/embrace/opentelemetry/kotlin/tracing/model/SpanContext {
	public fun <init> (Lio/opentelemetry/api/trace/SpanContext;)V
	public final fun getImpl ()Lio/opentelemetry/api/trace/SpanContext;
	public fun getSpanId ()Ljava/lang/String;
	public fun getTraceFlags ()Lio/embrace/opentelemetry/kotlin/tracing/model/TraceFlags;
	public fun getTraceId ()Ljava/lang/String;
	public fun getTraceState ()Lio/embrace/opentelemetry/kotlin/tracing/model/TraceState;
	public fun isRemote ()Z
	public fun isValid ()Z
}

public final class io/embrace/opentelemetry/kotlin/k2j/tracing/TracerAdapter : io/embrace/opentelemetry/kotlin/tracing/Tracer {
	public fun <init> (Lio/opentelemetry/api/trace/Tracer;Lio/embrace/opentelemetry/kotlin/Clock;)V
	public fun createSpan (Ljava/lang/String;Lio/embrace/opentelemetry/kotlin/tracing/model/SpanContext;Lio/embrace/opentelemetry/kotlin/tracing/model/SpanKind;Ljava/lang/Long;Lkotlin/jvm/functions/Function1;)Lio/embrace/opentelemetry/kotlin/tracing/model/Span;
}

public final class io/embrace/opentelemetry/kotlin/k2j/tracing/TracerProviderAdapter : io/embrace/opentelemetry/kotlin/tracing/TracerProvider {
	public fun <init> (Lio/opentelemetry/api/trace/TracerProvider;Lio/embrace/opentelemetry/kotlin/k2j/ClockAdapter;)V
	public synthetic fun <init> (Lio/opentelemetry/api/trace/TracerProvider;Lio/embrace/opentelemetry/kotlin/k2j/ClockAdapter;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getTracer (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lio/embrace/opentelemetry/kotlin/tracing/Tracer;
}

