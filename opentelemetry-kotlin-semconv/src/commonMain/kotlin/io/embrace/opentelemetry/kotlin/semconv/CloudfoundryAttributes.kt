package io.embrace.opentelemetry.kotlin.semconv

/**
 * Autogenerated OpenTelemetry semantic conventions for 'cloudfoundry'.
 *
 * DO NOT EDIT - AUTOGENERATED FILE
 */
@Suppress("unused")
object CloudfoundryAttributes {
  

    /**
    * <p>The guid of the application.</p>
    * <p>Notes:</p>
    * <p>Application instrumentation should use the value from environment
    * variable <c>VCAP_APPLICATION.application_id</c>. This is the same value as
    * reported by <c>cf app <app-name> --guid</c>.</p>
    */
    @IncubatingApi
    const val CLOUDFOUNDRY_APP_ID: String = "cloudfoundry.app.id"

    /**
    * <p>The index of the application instance. 0 when just one instance is active.</p>
    * <p>Notes:</p>
    * <p>CloudFoundry defines the <c>instance_id</c> in the <a href="https://github.com/cloudfoundry/loggregator-api#v2-envelope">Loggregator v2 envelope</a>.
    * It is used for logs and metrics emitted by CloudFoundry. It is
    * supposed to contain the application instance index for applications
    * deployed on the runtime.</p>
    * <p>Application instrumentation should use the value from environment
    * variable <c>CF_INSTANCE_INDEX</c>.</p>
    */
    @IncubatingApi
    const val CLOUDFOUNDRY_APP_INSTANCE_ID: String = "cloudfoundry.app.instance.id"

    /**
    * <p>The name of the application.</p>
    * <p>Notes:</p>
    * <p>Application instrumentation should use the value from environment
    * variable <c>VCAP_APPLICATION.application_name</c>. This is the same value
    * as reported by <c>cf apps</c>.</p>
    */
    @IncubatingApi
    const val CLOUDFOUNDRY_APP_NAME: String = "cloudfoundry.app.name"

    /**
    * <p>The guid of the CloudFoundry org the application is running in.</p>
    * <p>Notes:</p>
    * <p>Application instrumentation should use the value from environment
    * variable <c>VCAP_APPLICATION.org_id</c>. This is the same value as
    * reported by <c>cf org <org-name> --guid</c>.</p>
    */
    @IncubatingApi
    const val CLOUDFOUNDRY_ORG_ID: String = "cloudfoundry.org.id"

    /**
    * <p>The name of the CloudFoundry organization the app is running in.</p>
    * <p>Notes:</p>
    * <p>Application instrumentation should use the value from environment
    * variable <c>VCAP_APPLICATION.org_name</c>. This is the same value as
    * reported by <c>cf orgs</c>.</p>
    */
    @IncubatingApi
    const val CLOUDFOUNDRY_ORG_NAME: String = "cloudfoundry.org.name"

    /**
    * <p>The UID identifying the process.</p>
    * <p>Notes:</p>
    * <p>Application instrumentation should use the value from environment
    * variable <c>VCAP_APPLICATION.process_id</c>. It is supposed to be equal to
    * <c>VCAP_APPLICATION.app_id</c> for applications deployed to the runtime.
    * For system components, this could be the actual PID.</p>
    */
    @IncubatingApi
    const val CLOUDFOUNDRY_PROCESS_ID: String = "cloudfoundry.process.id"

    /**
    * <p>The type of process.</p>
    * <p>Notes:</p>
    * <p>CloudFoundry applications can consist of multiple jobs. Usually the
    * main process will be of type <c>web</c>. There can be additional background
    * tasks or side-cars with different process types.</p>
    */
    @IncubatingApi
    const val CLOUDFOUNDRY_PROCESS_TYPE: String = "cloudfoundry.process.type"

    /**
    * <p>The guid of the CloudFoundry space the application is running in.</p>
    * <p>Notes:</p>
    * <p>Application instrumentation should use the value from environment
    * variable <c>VCAP_APPLICATION.space_id</c>. This is the same value as
    * reported by <c>cf space <space-name> --guid</c>.</p>
    */
    @IncubatingApi
    const val CLOUDFOUNDRY_SPACE_ID: String = "cloudfoundry.space.id"

    /**
    * <p>The name of the CloudFoundry space the application is running in.</p>
    * <p>Notes:</p>
    * <p>Application instrumentation should use the value from environment
    * variable <c>VCAP_APPLICATION.space_name</c>. This is the same value as
    * reported by <c>cf spaces</c>.</p>
    */
    @IncubatingApi
    const val CLOUDFOUNDRY_SPACE_NAME: String = "cloudfoundry.space.name"

    /**
    * <p>A guid or another name describing the event source.</p>
    * <p>Notes:</p>
    * <p>CloudFoundry defines the <c>source_id</c> in the <a href="https://github.com/cloudfoundry/loggregator-api#v2-envelope">Loggregator v2 envelope</a>.
    * It is used for logs and metrics emitted by CloudFoundry. It is
    * supposed to contain the component name, e.g. "gorouter", for
    * CloudFoundry components.</p>
    * <p>When system components are instrumented, values from the
    * <a href="https://bosh.io/docs/jobs/#properties-spec">Bosh spec</a>
    * should be used. The <c>system.id</c> should be set to
    * <c>spec.deployment/spec.name</c>.</p>
    */
    @IncubatingApi
    const val CLOUDFOUNDRY_SYSTEM_ID: String = "cloudfoundry.system.id"

    /**
    * <p>A guid describing the concrete instance of the event source.</p>
    * <p>Notes:</p>
    * <p>CloudFoundry defines the <c>instance_id</c> in the <a href="https://github.com/cloudfoundry/loggregator-api#v2-envelope">Loggregator v2 envelope</a>.
    * It is used for logs and metrics emitted by CloudFoundry. It is
    * supposed to contain the vm id for CloudFoundry components.</p>
    * <p>When system components are instrumented, values from the
    * <a href="https://bosh.io/docs/jobs/#properties-spec">Bosh spec</a>
    * should be used. The <c>system.instance.id</c> should be set to <c>spec.id</c>.</p>
    */
    @IncubatingApi
    const val CLOUDFOUNDRY_SYSTEM_INSTANCE_ID: String = "cloudfoundry.system.instance.id"
}
