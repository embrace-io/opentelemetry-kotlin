package io.embrace.opentelemetry.kotlin.semconv

/**
 * Autogenerated OpenTelemetry semantic conventions for 'browser'.
 *
 * DO NOT EDIT - AUTOGENERATED FILE
 */
@Suppress("unused")
object BrowserAttributes {
  

    /**
    * <p>Array of brand name and version separated by a space</p>
    * <p>Notes:</p>
    * <p>This value is intended to be taken from the <a href="https://wicg.github.io/ua-client-hints/#interface">UA client hints API</a> (<c>navigator.userAgentData.brands</c>).</p>
    */
    @IncubatingApi
    const val BROWSER_BRANDS: String = "browser.brands"

    /**
    * <p>Preferred language of the user using the browser</p>
    * <p>Notes:</p>
    * <p>This value is intended to be taken from the Navigator API <c>navigator.language</c>.</p>
    */
    @IncubatingApi
    const val BROWSER_LANGUAGE: String = "browser.language"

    /**
    * <p>A boolean that is true if the browser is running on a mobile device</p>
    * <p>Notes:</p>
    * <p>This value is intended to be taken from the <a href="https://wicg.github.io/ua-client-hints/#interface">UA client hints API</a> (<c>navigator.userAgentData.mobile</c>). If unavailable, this attribute SHOULD be left unset.</p>
    */
    @IncubatingApi
    const val BROWSER_MOBILE: String = "browser.mobile"

    /**
    * <p>The platform on which the browser is running</p>
    * <p>Notes:</p>
    * <p>This value is intended to be taken from the <a href="https://wicg.github.io/ua-client-hints/#interface">UA client hints API</a> (<c>navigator.userAgentData.platform</c>). If unavailable, the legacy <c>navigator.platform</c> API SHOULD NOT be used instead and this attribute SHOULD be left unset in order for the values to be consistent.
    * The list of possible values is defined in the <a href="https://wicg.github.io/ua-client-hints/#sec-ch-ua-platform">W3C User-Agent Client Hints specification</a>. Note that some (but not all) of these values can overlap with values in the <a href="./os.md"><c>os.type</c> and <c>os.name</c> attributes</a>. However, for consistency, the values in the <c>browser.platform</c> attribute should capture the exact value that the user agent provides.</p>
    */
    @IncubatingApi
    const val BROWSER_PLATFORM: String = "browser.platform"
}
