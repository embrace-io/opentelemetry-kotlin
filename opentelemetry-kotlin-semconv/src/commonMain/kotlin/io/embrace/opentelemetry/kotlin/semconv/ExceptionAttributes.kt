package io.embrace.opentelemetry.kotlin.semconv

/**
 * Autogenerated OpenTelemetry semantic conventions for 'exception'.
 *
 * DO NOT EDIT - AUTOGENERATED FILE
 */
@Suppress("unused")
object ExceptionAttributes {
  

    /**
    * <p>Indicates that the exception is escaping the scope of the span.</p>
    */
    @Deprecated("It's no longer recommended to record exceptions that are handled and do not escape the scope of a span.")
    const val EXCEPTION_ESCAPED: String = "exception.escaped"

    /**
    * <p>The exception message.</p>
    */
    const val EXCEPTION_MESSAGE: String = "exception.message"

    /**
    * <p>A stacktrace as a string in the natural representation for the language runtime. The representation is to be determined and documented by each language SIG.</p>
    */
    const val EXCEPTION_STACKTRACE: String = "exception.stacktrace"

    /**
    * <p>The type of the exception (its fully-qualified class name, if applicable). The dynamic type of the exception should be preferred over the static type in languages that support it.</p>
    */
    const val EXCEPTION_TYPE: String = "exception.type"
}
