package io.embrace.opentelemetry.kotlin.semconv

/**
 * Autogenerated OpenTelemetry semantic conventions for 'faas'.
 *
 * DO NOT EDIT - AUTOGENERATED FILE
 */
@Suppress("unused")
object FaasAttributes {
  

    /**
    * <p>A boolean that is true if the serverless function is executed for the first time (aka cold-start).</p>
    */
    @IncubatingApi
    const val FAAS_COLDSTART: String = "faas.coldstart"

    /**
    * <p>A string containing the schedule period as <a href="https://docs.oracle.com/cd/E12058_01/doc/doc.1014/e12030/cron_expressions.htm">Cron Expression</a>.</p>
    */
    @IncubatingApi
    const val FAAS_CRON: String = "faas.cron"

    /**
    * <p>The name of the source on which the triggering operation was performed. For example, in Cloud Storage or S3 corresponds to the bucket name, and in Cosmos DB to the database name.</p>
    */
    @IncubatingApi
    const val FAAS_DOCUMENT_COLLECTION: String = "faas.document.collection"

    /**
    * <p>The document name/table subjected to the operation. For example, in Cloud Storage or S3 is the name of the file, and in Cosmos DB the table name.</p>
    */
    @IncubatingApi
    const val FAAS_DOCUMENT_NAME: String = "faas.document.name"

    /**
    * <p>Describes the type of the operation that was performed on the data.</p>
    */
    @IncubatingApi
    const val FAAS_DOCUMENT_OPERATION: String = "faas.document.operation"

    /**
    * <p>A string containing the time when the data was accessed in the <a href="https://www.iso.org/iso-8601-date-and-time-format.html">ISO 8601</a> format expressed in <a href="https://www.w3.org/TR/NOTE-datetime">UTC</a>.</p>
    */
    @IncubatingApi
    const val FAAS_DOCUMENT_TIME: String = "faas.document.time"

    /**
    * <p>The execution environment ID as a string, that will be potentially reused for other invocations to the same function/function version.</p>
    * <p>Notes:</p>
    * <ul>
    *   <li><strong>AWS Lambda:</strong> Use the (full) log stream name.</li>
    * </ul>
    */
    @IncubatingApi
    const val FAAS_INSTANCE: String = "faas.instance"

    /**
    * <p>The invocation ID of the current function invocation.</p>
    */
    @IncubatingApi
    const val FAAS_INVOCATION_ID: String = "faas.invocation_id"

    /**
    * <p>The name of the invoked function.</p>
    * <p>Notes:</p>
    * <p>SHOULD be equal to the <c>faas.name</c> resource attribute of the invoked function.</p>
    */
    @IncubatingApi
    const val FAAS_INVOKED_NAME: String = "faas.invoked_name"

    /**
    * <p>The cloud provider of the invoked function.</p>
    * <p>Notes:</p>
    * <p>SHOULD be equal to the <c>cloud.provider</c> resource attribute of the invoked function.</p>
    */
    @IncubatingApi
    const val FAAS_INVOKED_PROVIDER: String = "faas.invoked_provider"

    /**
    * <p>The cloud region of the invoked function.</p>
    * <p>Notes:</p>
    * <p>SHOULD be equal to the <c>cloud.region</c> resource attribute of the invoked function.</p>
    */
    @IncubatingApi
    const val FAAS_INVOKED_REGION: String = "faas.invoked_region"

    /**
    * <p>The amount of memory available to the serverless function converted to Bytes.</p>
    * <p>Notes:</p>
    * <p>It's recommended to set this attribute since e.g. too little memory can easily stop a Java AWS Lambda function from working correctly. On AWS Lambda, the environment variable <c>AWS_LAMBDA_FUNCTION_MEMORY_SIZE</c> provides this information (which must be multiplied by 1,048,576).</p>
    */
    @IncubatingApi
    const val FAAS_MAX_MEMORY: String = "faas.max_memory"

    /**
    * <p>The name of the single function that this runtime instance executes.</p>
    * <p>Notes:</p>
    * <p>This is the name of the function as configured/deployed on the FaaS
    * platform and is usually different from the name of the callback
    * function (which may be stored in the
    * <a href="/docs/general/attributes.md#source-code-attributes"><c>code.namespace</c>/<c>code.function.name</c></a>
    * span attributes).</p>
    * <p>For some cloud providers, the above definition is ambiguous. The following
    * definition of function name MUST be used for this attribute
    * (and consequently the span name) for the listed cloud providers/products:</p>
    * <ul>
    *   <li><strong>Azure:</strong>  The full name <c><FUNCAPP>/<FUNC></c>, i.e., function app name
    * followed by a forward slash followed by the function name (this form
    * can also be seen in the resource JSON for the function).
    * This means that a span attribute MUST be used, as an Azure function
    * app can host multiple functions that would usually share
    * a TracerProvider (see also the <c>cloud.resource_id</c> attribute).</li>
    * </ul>
    */
    @IncubatingApi
    const val FAAS_NAME: String = "faas.name"

    /**
    * <p>A string containing the function invocation time in the <a href="https://www.iso.org/iso-8601-date-and-time-format.html">ISO 8601</a> format expressed in <a href="https://www.w3.org/TR/NOTE-datetime">UTC</a>.</p>
    */
    @IncubatingApi
    const val FAAS_TIME: String = "faas.time"

    /**
    * <p>Type of the trigger which caused this function invocation.</p>
    */
    @IncubatingApi
    const val FAAS_TRIGGER: String = "faas.trigger"

    /**
    * <p>The immutable version of the function being executed.</p>
    * <p>Notes:</p>
    * <p>Depending on the cloud provider and platform, use:</p>
    * <ul>
    *   <li><strong>AWS Lambda:</strong> The <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-versions.html">function version</a>
    * (an integer represented as a decimal string).</li>
    *   <li><strong>Google Cloud Run (Services):</strong> The <a href="https://cloud.google.com/run/docs/managing/revisions">revision</a>
    * (i.e., the function name plus the revision suffix).</li>
    *   <li><strong>Google Cloud Functions:</strong> The value of the
    * <a href="https://cloud.google.com/functions/docs/env-var#runtime_environment_variables_set_automatically"><c>K_REVISION</c> environment variable</a>.</li>
    *   <li><strong>Azure Functions:</strong> Not applicable. Do not set this attribute.</li>
    * </ul>
    */
    @IncubatingApi
    const val FAAS_VERSION: String = "faas.version"

    /**
    * <p>FAAS_DOCUMENT_OPERATION</p>
    */
    @IncubatingApi
    enum class FaasDocumentOperationValues(val value: String) {

        /**
        * <p>When a new object is created.</p>
        */
        INSERT("insert"),

        /**
        * <p>When an object is modified.</p>
        */
        EDIT("edit"),

        /**
        * <p>When an object is deleted.</p>
        */
        DELETE("delete"),
    }

    /**
    * <p>FAAS_INVOKED_PROVIDER</p>
    */
    @IncubatingApi
    enum class FaasInvokedProviderValues(val value: String) {

        /**
        * <p>Alibaba Cloud</p>
        */
        ALIBABA_CLOUD("alibaba_cloud"),

        /**
        * <p>Amazon Web Services</p>
        */
        AWS("aws"),

        /**
        * <p>Microsoft Azure</p>
        */
        AZURE("azure"),

        /**
        * <p>Google Cloud Platform</p>
        */
        GCP("gcp"),

        /**
        * <p>Tencent Cloud</p>
        */
        TENCENT_CLOUD("tencent_cloud"),
    }

    /**
    * <p>FAAS_TRIGGER</p>
    */
    @IncubatingApi
    enum class FaasTriggerValues(val value: String) {

        /**
        * <p>A response to some data source operation such as a database or filesystem read/write</p>
        */
        DATASOURCE("datasource"),

        /**
        * <p>To provide an answer to an inbound HTTP request</p>
        */
        HTTP("http"),

        /**
        * <p>A function is set to be executed when messages are sent to a messaging system</p>
        */
        PUBSUB("pubsub"),

        /**
        * <p>A function is scheduled to be executed regularly</p>
        */
        TIMER("timer"),

        /**
        * <p>If none of the others apply</p>
        */
        OTHER("other"),
    }
}
