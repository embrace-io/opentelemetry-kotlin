package io.embrace.opentelemetry.kotlin.semconv

/**
 * Autogenerated OpenTelemetry semantic conventions for 'test'.
 *
 * DO NOT EDIT - AUTOGENERATED FILE
 */
@Suppress("unused")
object TestAttributes {
  

    /**
    * <p>The fully qualified human readable name of the <a href="https://wikipedia.org/wiki/Test_case">test case</a>.</p>
    */
    @IncubatingApi
    const val TEST_CASE_NAME: String = "test.case.name"

    /**
    * <p>The status of the actual test case result from test execution.</p>
    */
    @IncubatingApi
    const val TEST_CASE_RESULT_STATUS: String = "test.case.result.status"

    /**
    * <p>The human readable name of a <a href="https://wikipedia.org/wiki/Test_suite">test suite</a>.</p>
    */
    @IncubatingApi
    const val TEST_SUITE_NAME: String = "test.suite.name"

    /**
    * <p>The status of the test suite run.</p>
    */
    @IncubatingApi
    const val TEST_SUITE_RUN_STATUS: String = "test.suite.run.status"

    /**
    * <p>TEST_CASE_RESULT_STATUS</p>
    */
    @IncubatingApi
    enum class TestCaseResultStatusValues(val value: String) {

        /**
        * <p>pass</p>
        */
        PASS("pass"),

        /**
        * <p>fail</p>
        */
        FAIL("fail"),
    }

    /**
    * <p>TEST_SUITE_RUN_STATUS</p>
    */
    @IncubatingApi
    enum class TestSuiteRunStatusValues(val value: String) {

        /**
        * <p>success</p>
        */
        SUCCESS("success"),

        /**
        * <p>failure</p>
        */
        FAILURE("failure"),

        /**
        * <p>skipped</p>
        */
        SKIPPED("skipped"),

        /**
        * <p>aborted</p>
        */
        ABORTED("aborted"),

        /**
        * <p>timed_out</p>
        */
        TIMED_OUT("timed_out"),

        /**
        * <p>in_progress</p>
        */
        IN_PROGRESS("in_progress"),
    }
}
