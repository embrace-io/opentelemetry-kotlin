package io.embrace.opentelemetry.kotlin.semconv

/**
 * Autogenerated OpenTelemetry semantic conventions for 'destination'.
 *
 * DO NOT EDIT - AUTOGENERATED FILE
 */
@Suppress("unused")
object DestinationAttributes {
  

    /**
    * <p>Destination address - domain name if available without reverse DNS lookup; otherwise, IP address or Unix domain socket name.</p>
    * <p>Notes:</p>
    * <p>When observed from the source side, and when communicating through an intermediary, <c>destination.address</c> SHOULD represent the destination address behind any intermediaries, for example proxies, if it's available.</p>
    */
    @IncubatingApi
    const val DESTINATION_ADDRESS: String = "destination.address"

    /**
    * <p>Destination port number</p>
    */
    @IncubatingApi
    const val DESTINATION_PORT: String = "destination.port"
}
