package io.embrace.opentelemetry.kotlin.semconv

/**
 * Autogenerated OpenTelemetry semantic conventions for 'cloudevents'.
 *
 * DO NOT EDIT - AUTOGENERATED FILE
 */
@Suppress("unused")
object CloudeventsAttributes {
  

    /**
    * <p>The <a href="https://github.com/cloudevents/spec/blob/v1.0.2/cloudevents/spec.md#id">event_id</a> uniquely identifies the event.</p>
    */
    @IncubatingApi
    const val CLOUDEVENTS_EVENT_ID: String = "cloudevents.event_id"

    /**
    * <p>The <a href="https://github.com/cloudevents/spec/blob/v1.0.2/cloudevents/spec.md#source-1">source</a> identifies the context in which an event happened.</p>
    */
    @IncubatingApi
    const val CLOUDEVENTS_EVENT_SOURCE: String = "cloudevents.event_source"

    /**
    * <p>The <a href="https://github.com/cloudevents/spec/blob/v1.0.2/cloudevents/spec.md#specversion">version of the CloudEvents specification</a> which the event uses.</p>
    */
    @IncubatingApi
    const val CLOUDEVENTS_EVENT_SPEC_VERSION: String = "cloudevents.event_spec_version"

    /**
    * <p>The <a href="https://github.com/cloudevents/spec/blob/v1.0.2/cloudevents/spec.md#subject">subject</a> of the event in the context of the event producer (identified by source).</p>
    */
    @IncubatingApi
    const val CLOUDEVENTS_EVENT_SUBJECT: String = "cloudevents.event_subject"

    /**
    * <p>The <a href="https://github.com/cloudevents/spec/blob/v1.0.2/cloudevents/spec.md#type">event_type</a> contains a value describing the type of event related to the originating occurrence.</p>
    */
    @IncubatingApi
    const val CLOUDEVENTS_EVENT_TYPE: String = "cloudevents.event_type"
}
