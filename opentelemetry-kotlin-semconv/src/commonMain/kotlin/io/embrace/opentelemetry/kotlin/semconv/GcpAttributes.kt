package io.embrace.opentelemetry.kotlin.semconv

/**
 * Autogenerated OpenTelemetry semantic conventions for 'gcp'.
 *
 * DO NOT EDIT - AUTOGENERATED FILE
 */
@Suppress("unused")
object GcpAttributes {
  

    /**
    * <p>The container within GCP where the AppHub application is defined.</p>
    */
    @IncubatingApi
    const val GCP_APPHUB_APPLICATION_CONTAINER: String = "gcp.apphub.application.container"

    /**
    * <p>The name of the application as configured in AppHub.</p>
    */
    @IncubatingApi
    const val GCP_APPHUB_APPLICATION_ID: String = "gcp.apphub.application.id"

    /**
    * <p>The GCP zone or region where the application is defined.</p>
    */
    @IncubatingApi
    const val GCP_APPHUB_APPLICATION_LOCATION: String = "gcp.apphub.application.location"

    /**
    * <p>Criticality of a service indicates its importance to the business.</p>
    * <p>Notes:</p>
    * <p><a href="https://cloud.google.com/app-hub/docs/reference/rest/v1/Attributes#type">See AppHub type enum</a></p>
    */
    @IncubatingApi
    const val GCP_APPHUB_SERVICE_CRITICALITY_TYPE: String = "gcp.apphub.service.criticality_type"

    /**
    * <p>Environment of a service is the stage of a software lifecycle.</p>
    * <p>Notes:</p>
    * <p><a href="https://cloud.google.com/app-hub/docs/reference/rest/v1/Attributes#type_1">See AppHub environment type</a></p>
    */
    @IncubatingApi
    const val GCP_APPHUB_SERVICE_ENVIRONMENT_TYPE: String = "gcp.apphub.service.environment_type"

    /**
    * <p>The name of the service as configured in AppHub.</p>
    */
    @IncubatingApi
    const val GCP_APPHUB_SERVICE_ID: String = "gcp.apphub.service.id"

    /**
    * <p>Criticality of a workload indicates its importance to the business.</p>
    * <p>Notes:</p>
    * <p><a href="https://cloud.google.com/app-hub/docs/reference/rest/v1/Attributes#type">See AppHub type enum</a></p>
    */
    @IncubatingApi
    const val GCP_APPHUB_WORKLOAD_CRITICALITY_TYPE: String = "gcp.apphub.workload.criticality_type"

    /**
    * <p>Environment of a workload is the stage of a software lifecycle.</p>
    * <p>Notes:</p>
    * <p><a href="https://cloud.google.com/app-hub/docs/reference/rest/v1/Attributes#type_1">See AppHub environment type</a></p>
    */
    @IncubatingApi
    const val GCP_APPHUB_WORKLOAD_ENVIRONMENT_TYPE: String = "gcp.apphub.workload.environment_type"

    /**
    * <p>The name of the workload as configured in AppHub.</p>
    */
    @IncubatingApi
    const val GCP_APPHUB_WORKLOAD_ID: String = "gcp.apphub.workload.id"

    /**
    * <p>Identifies the Google Cloud service for which the official client library is intended.</p>
    * <p>Notes:</p>
    * <p>Intended to be a stable identifier for Google Cloud client libraries that is uniform across implementation languages. The value should be derived from the canonical service domain for the service; for example, 'foo.googleapis.com' should result in a value of 'foo'.</p>
    */
    @IncubatingApi
    const val GCP_CLIENT_SERVICE: String = "gcp.client.service"

    /**
    * <p>The name of the Cloud Run <a href="https://cloud.google.com/run/docs/managing/job-executions">execution</a> being run for the Job, as set by the <a href="https://cloud.google.com/run/docs/container-contract#jobs-env-vars"><c>CLOUD_RUN_EXECUTION</c></a> environment variable.</p>
    */
    @IncubatingApi
    const val GCP_CLOUD_RUN_JOB_EXECUTION: String = "gcp.cloud_run.job.execution"

    /**
    * <p>The index for a task within an execution as provided by the <a href="https://cloud.google.com/run/docs/container-contract#jobs-env-vars"><c>CLOUD_RUN_TASK_INDEX</c></a> environment variable.</p>
    */
    @IncubatingApi
    const val GCP_CLOUD_RUN_JOB_TASK_INDEX: String = "gcp.cloud_run.job.task_index"

    /**
    * <p>The hostname of a GCE instance. This is the full value of the default or <a href="https://cloud.google.com/compute/docs/instances/custom-hostname-vm">custom hostname</a>.</p>
    */
    @IncubatingApi
    const val GCP_GCE_INSTANCE_HOSTNAME: String = "gcp.gce.instance.hostname"

    /**
    * <p>The instance name of a GCE instance. This is the value provided by <c>host.name</c>, the visible name of the instance in the Cloud Console UI, and the prefix for the default hostname of the instance as defined by the <a href="https://cloud.google.com/compute/docs/internal-dns#instance-fully-qualified-domain-names">default internal DNS name</a>.</p>
    */
    @IncubatingApi
    const val GCP_GCE_INSTANCE_NAME: String = "gcp.gce.instance.name"

    /**
    * <p>GCP_APPHUB_SERVICE_CRITICALITY_TYPE</p>
    */
    @IncubatingApi
    enum class GcpApphubServiceCriticalityTypeValues(val value: String) {

        /**
        * <p>Mission critical service.</p>
        */
        MISSION_CRITICAL("MISSION_CRITICAL"),

        /**
        * <p>High impact.</p>
        */
        HIGH("HIGH"),

        /**
        * <p>Medium impact.</p>
        */
        MEDIUM("MEDIUM"),

        /**
        * <p>Low impact.</p>
        */
        LOW("LOW"),
    }

    /**
    * <p>GCP_APPHUB_SERVICE_ENVIRONMENT_TYPE</p>
    */
    @IncubatingApi
    enum class GcpApphubServiceEnvironmentTypeValues(val value: String) {

        /**
        * <p>Production environment.</p>
        */
        PRODUCTION("PRODUCTION"),

        /**
        * <p>Staging environment.</p>
        */
        STAGING("STAGING"),

        /**
        * <p>Test environment.</p>
        */
        TEST("TEST"),

        /**
        * <p>Development environment.</p>
        */
        DEVELOPMENT("DEVELOPMENT"),
    }

    /**
    * <p>GCP_APPHUB_WORKLOAD_CRITICALITY_TYPE</p>
    */
    @IncubatingApi
    enum class GcpApphubWorkloadCriticalityTypeValues(val value: String) {

        /**
        * <p>Mission critical service.</p>
        */
        MISSION_CRITICAL("MISSION_CRITICAL"),

        /**
        * <p>High impact.</p>
        */
        HIGH("HIGH"),

        /**
        * <p>Medium impact.</p>
        */
        MEDIUM("MEDIUM"),

        /**
        * <p>Low impact.</p>
        */
        LOW("LOW"),
    }

    /**
    * <p>GCP_APPHUB_WORKLOAD_ENVIRONMENT_TYPE</p>
    */
    @IncubatingApi
    enum class GcpApphubWorkloadEnvironmentTypeValues(val value: String) {

        /**
        * <p>Production environment.</p>
        */
        PRODUCTION("PRODUCTION"),

        /**
        * <p>Staging environment.</p>
        */
        STAGING("STAGING"),

        /**
        * <p>Test environment.</p>
        */
        TEST("TEST"),

        /**
        * <p>Development environment.</p>
        */
        DEVELOPMENT("DEVELOPMENT"),
    }
}
