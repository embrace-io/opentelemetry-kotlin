# https://detekt.dev/docs/introduction/configurations/
build:
  maxIssues: 0
complexity:
  NestedBlockDepth:
    threshold: 10
  LongMethod:
    active: false
  LongParameterList:
    constructorThreshold: 30
    functionThreshold: 31
    ignoreDataClasses: true
  TooManyFunctions:
    thresholdInFiles: 31
    thresholdInClasses: 31
    thresholdInInterfaces: 31
    thresholdInObjects: 31
    thresholdInEnums: 31
    ignoreOverridden: true
  CyclomaticComplexMethod:
    active: false
empty-blocks:
  EmptyFunctionBlock:
    ignoreOverridden: true
exceptions:
  InstanceOfCheckForException:
    active: false
  SwallowedException:
    active: false
  TooGenericExceptionCaught:
    active: false
formatting:
  ArgumentListWrapping:
    maxLineLength: 140
  MaximumLineLength:
    maxLineLength: 140
  useTrailingCommaOnCallSite:
    active: true
  useTrailingCommaOnDeclarationSite:
    active: true
potential-bugs:
  ElseCaseInsteadOfExhaustiveWhen:
    active: true
style:
  ForbiddenComment:
    active: false
  MagicNumber:
    active: false
  MaxLineLength:
    maxLineLength: 140
  ReturnCount:
    active: false
  BracesOnIfStatements:
    active: true
    singleLine: 'always'
    multiLine: 'always'
  BracesOnWhenStatements:
    active: true
    singleLine: 'consistent'
    multiLine: 'always'
  MandatoryBracesLoops:
    active: true
  SpacingBetweenPackageAndImports:
    active: true
  UnusedImports:
    active: true

# Discourage 'embrace' anywhere in symbol names
naming:
  ForbiddenClassName:
    active: true
    forbiddenName: ['*Embrace']
  ClassNaming:
    active: true
    classPattern: '^(?!.*Utils)[A-Z][A-Za-z0-9]*$'

# Custom rules defined in this project
custom-rules:
  DiscouragedImport:
    active: true
    restrictedPackages:
      - "io.opentelemetry"
    allowedFileIds:
      - "io.embrace.opentelemetry.kotlin.aliases.Aliases"
      - "io.embrace.opentelemetry.kotlin.factory.SpanFactoryImpl"
      - "io.embrace.opentelemetry.kotlin.export.ProtobufSerialization.jvm"
      - "io.embrace.opentelemetry.kotlin.export.OtlpClientTest"
      - "io.embrace.opentelemetry.kotlin.logging.export.OtlpHttpLogRecordExporterTest"
      - "io.embrace.opentelemetry.kotlin.tracing.export.OtlpHttpSpanExporterTest"
