public abstract interface class io/embrace/opentelemetry/kotlin/OpenTelemetry : io/embrace/opentelemetry/kotlin/factory/SdkFactory {
	public abstract fun getClock ()Lio/embrace/opentelemetry/kotlin/Clock;
	public abstract fun getLoggerProvider ()Lio/embrace/opentelemetry/kotlin/logging/LoggerProvider;
	public abstract fun getTracerProvider ()Lio/embrace/opentelemetry/kotlin/tracing/TracerProvider;
}

public abstract interface annotation class io/embrace/opentelemetry/kotlin/init/ConfigDsl : java/lang/annotation/Annotation {
}

public abstract interface class io/embrace/opentelemetry/kotlin/init/LogLimitsConfigDsl {
	public abstract fun getAttributeCountLimit ()I
	public abstract fun getAttributeValueLengthLimit ()I
	public abstract fun setAttributeCountLimit (I)V
	public abstract fun setAttributeValueLengthLimit (I)V
}

public abstract interface class io/embrace/opentelemetry/kotlin/init/LoggerProviderConfigDsl : io/embrace/opentelemetry/kotlin/init/ResourceConfigDsl {
	public abstract fun addLogRecordProcessor (Lio/embrace/opentelemetry/kotlin/logging/export/LogRecordProcessor;)V
	public abstract fun logLimits (Lkotlin/jvm/functions/Function1;)V
}

public abstract interface class io/embrace/opentelemetry/kotlin/init/ResourceConfigDsl {
	public abstract fun resource (Ljava/lang/String;Lkotlin/jvm/functions/Function1;)V
	public abstract fun resource (Ljava/util/Map;)V
}

public final class io/embrace/opentelemetry/kotlin/init/ResourceConfigDsl$DefaultImpls {
	public static synthetic fun resource$default (Lio/embrace/opentelemetry/kotlin/init/ResourceConfigDsl;Ljava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
}

public abstract interface class io/embrace/opentelemetry/kotlin/init/SpanLimitsConfigDsl {
	public abstract fun getAttributeCountLimit ()I
	public abstract fun getAttributeCountPerEventLimit ()I
	public abstract fun getAttributeCountPerLinkLimit ()I
	public abstract fun getEventCountLimit ()I
	public abstract fun getLinkCountLimit ()I
	public abstract fun setAttributeCountLimit (I)V
	public abstract fun setAttributeCountPerEventLimit (I)V
	public abstract fun setAttributeCountPerLinkLimit (I)V
	public abstract fun setEventCountLimit (I)V
	public abstract fun setLinkCountLimit (I)V
}

public abstract interface class io/embrace/opentelemetry/kotlin/init/TracerProviderConfigDsl : io/embrace/opentelemetry/kotlin/init/ResourceConfigDsl {
	public abstract fun addSpanProcessor (Lio/embrace/opentelemetry/kotlin/tracing/export/SpanProcessor;)V
	public abstract fun spanLimits (Lkotlin/jvm/functions/Function1;)V
}

