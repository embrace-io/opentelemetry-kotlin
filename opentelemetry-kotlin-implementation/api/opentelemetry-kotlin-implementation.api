public final class io/embrace/opentelemetry/kotlin/InstrumentationScopeInfoImpl : io/embrace/opentelemetry/kotlin/InstrumentationScopeInfo {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V
	public fun getAttributes ()Ljava/util/Map;
	public fun getName ()Ljava/lang/String;
	public fun getSchemaUrl ()Ljava/lang/String;
	public fun getVersion ()Ljava/lang/String;
}

public final class io/embrace/opentelemetry/kotlin/OpenTelemetryInstanceImplKt {
	public static final fun default (Lio/embrace/opentelemetry/kotlin/OpenTelemetryInstance;Lio/embrace/opentelemetry/kotlin/Clock;)Lio/embrace/opentelemetry/kotlin/OpenTelemetry;
	public static synthetic fun default$default (Lio/embrace/opentelemetry/kotlin/OpenTelemetryInstance;Lio/embrace/opentelemetry/kotlin/Clock;ILjava/lang/Object;)Lio/embrace/opentelemetry/kotlin/OpenTelemetry;
}

public final class io/embrace/opentelemetry/kotlin/context/ContextKeyImpl : io/embrace/opentelemetry/kotlin/context/ContextKey {
	public fun <init> (Ljava/lang/String;)V
	public fun getName ()Ljava/lang/String;
}

public final class io/embrace/opentelemetry/kotlin/tracing/LinkImpl : io/embrace/opentelemetry/kotlin/attributes/AttributeContainer, io/embrace/opentelemetry/kotlin/tracing/model/Link {
	public fun <init> (Lio/embrace/opentelemetry/kotlin/tracing/model/SpanContext;Lio/embrace/opentelemetry/kotlin/attributes/AttributeContainer;)V
	public fun attributes ()Ljava/util/Map;
	public fun getSpanContext ()Lio/embrace/opentelemetry/kotlin/tracing/model/SpanContext;
	public fun setBooleanAttribute (Ljava/lang/String;Z)V
	public fun setBooleanListAttribute (Ljava/lang/String;Ljava/util/List;)V
	public fun setDoubleAttribute (Ljava/lang/String;D)V
	public fun setDoubleListAttribute (Ljava/lang/String;Ljava/util/List;)V
	public fun setLongAttribute (Ljava/lang/String;J)V
	public fun setLongListAttribute (Ljava/lang/String;Ljava/util/List;)V
	public fun setStringAttribute (Ljava/lang/String;Ljava/lang/String;)V
	public fun setStringListAttribute (Ljava/lang/String;Ljava/util/List;)V
}

public final class io/embrace/opentelemetry/kotlin/tracing/NonRecordingSpan : io/embrace/opentelemetry/kotlin/tracing/model/Span {
	public fun <init> (Lio/embrace/opentelemetry/kotlin/tracing/model/SpanContext;Lio/embrace/opentelemetry/kotlin/tracing/model/SpanContext;)V
	public fun addEvent (Ljava/lang/String;Ljava/lang/Long;Lkotlin/jvm/functions/Function1;)V
	public fun addLink (Lio/embrace/opentelemetry/kotlin/tracing/model/SpanContext;Lkotlin/jvm/functions/Function1;)V
	public fun attributes ()Ljava/util/Map;
	public fun end ()V
	public fun end (J)V
	public fun events ()Ljava/util/List;
	public fun getName ()Ljava/lang/String;
	public fun getParent ()Lio/embrace/opentelemetry/kotlin/tracing/model/SpanContext;
	public fun getSpanContext ()Lio/embrace/opentelemetry/kotlin/tracing/model/SpanContext;
	public fun getSpanKind ()Lio/embrace/opentelemetry/kotlin/tracing/model/SpanKind;
	public fun getStartTimestamp ()J
	public fun getStatus ()Lio/embrace/opentelemetry/kotlin/tracing/StatusCode;
	public fun isRecording ()Z
	public fun links ()Ljava/util/List;
	public fun setBooleanAttribute (Ljava/lang/String;Z)V
	public fun setBooleanListAttribute (Ljava/lang/String;Ljava/util/List;)V
	public fun setDoubleAttribute (Ljava/lang/String;D)V
	public fun setDoubleListAttribute (Ljava/lang/String;Ljava/util/List;)V
	public fun setLongAttribute (Ljava/lang/String;J)V
	public fun setLongListAttribute (Ljava/lang/String;Ljava/util/List;)V
	public fun setName (Ljava/lang/String;)V
	public fun setStatus (Lio/embrace/opentelemetry/kotlin/tracing/StatusCode;)V
	public fun setStringAttribute (Ljava/lang/String;Ljava/lang/String;)V
	public fun setStringListAttribute (Ljava/lang/String;Ljava/util/List;)V
}

public final class io/embrace/opentelemetry/kotlin/tracing/ReadWriteLogRecordImpl : io/embrace/opentelemetry/kotlin/attributes/AttributeContainer, io/embrace/opentelemetry/kotlin/logging/model/ReadWriteLogRecord {
	public fun <init> (Ljava/lang/Long;Ljava/lang/Long;Lio/embrace/opentelemetry/kotlin/logging/model/SeverityNumber;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Lio/embrace/opentelemetry/kotlin/tracing/model/SpanContext;Lio/embrace/opentelemetry/kotlin/context/Context;Lio/embrace/opentelemetry/kotlin/resource/Resource;Lio/embrace/opentelemetry/kotlin/InstrumentationScopeInfo;Lio/embrace/opentelemetry/kotlin/attributes/AttributeContainer;)V
	public fun attributes ()Ljava/util/Map;
	public fun getAttributes ()Ljava/util/Map;
	public fun getBody ()Ljava/lang/String;
	public fun getContext ()Lio/embrace/opentelemetry/kotlin/context/Context;
	public fun getInstrumentationScopeInfo ()Lio/embrace/opentelemetry/kotlin/InstrumentationScopeInfo;
	public fun getObservedTimestamp ()Ljava/lang/Long;
	public fun getResource ()Lio/embrace/opentelemetry/kotlin/resource/Resource;
	public fun getSeverityNumber ()Lio/embrace/opentelemetry/kotlin/logging/model/SeverityNumber;
	public fun getSeverityText ()Ljava/lang/String;
	public fun getSpanContext ()Lio/embrace/opentelemetry/kotlin/tracing/model/SpanContext;
	public fun getTimestamp ()Ljava/lang/Long;
	public fun setBody (Ljava/lang/String;)V
	public fun setBooleanAttribute (Ljava/lang/String;Z)V
	public fun setBooleanListAttribute (Ljava/lang/String;Ljava/util/List;)V
	public fun setDoubleAttribute (Ljava/lang/String;D)V
	public fun setDoubleListAttribute (Ljava/lang/String;Ljava/util/List;)V
	public fun setLongAttribute (Ljava/lang/String;J)V
	public fun setLongListAttribute (Ljava/lang/String;Ljava/util/List;)V
	public fun setObservedTimestamp (Ljava/lang/Long;)V
	public fun setSeverityNumber (Lio/embrace/opentelemetry/kotlin/logging/model/SeverityNumber;)V
	public fun setSeverityText (Ljava/lang/String;)V
	public fun setSpanContext (Lio/embrace/opentelemetry/kotlin/tracing/model/SpanContext;)V
	public fun setStringAttribute (Ljava/lang/String;Ljava/lang/String;)V
	public fun setStringListAttribute (Ljava/lang/String;Ljava/util/List;)V
	public fun setTimestamp (Ljava/lang/Long;)V
}

public final class io/embrace/opentelemetry/kotlin/tracing/ReadWriteSpanImpl : io/embrace/opentelemetry/kotlin/tracing/model/ReadWriteSpan, io/embrace/opentelemetry/kotlin/tracing/model/ReadableSpan, io/embrace/opentelemetry/kotlin/tracing/model/SpanRelationships {
	public fun <init> (Lio/embrace/opentelemetry/kotlin/tracing/model/ReadableSpan;Lio/embrace/opentelemetry/kotlin/tracing/model/SpanRelationships;Ljava/lang/String;Lio/embrace/opentelemetry/kotlin/tracing/StatusCode;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function0;)V
	public fun addEvent (Ljava/lang/String;Ljava/lang/Long;Lkotlin/jvm/functions/Function1;)V
	public fun addLink (Lio/embrace/opentelemetry/kotlin/tracing/model/SpanContext;Lkotlin/jvm/functions/Function1;)V
	public fun attributes ()Ljava/util/Map;
	public fun end ()V
	public fun end (J)V
	public fun events ()Ljava/util/List;
	public fun getAttributes ()Ljava/util/Map;
	public fun getDescription ()Ljava/lang/String;
	public fun getEndTimestamp ()Ljava/lang/Long;
	public fun getEvents ()Ljava/util/List;
	public fun getInstrumentationScopeInfo ()Lio/embrace/opentelemetry/kotlin/InstrumentationScopeInfo;
	public fun getLinks ()Ljava/util/List;
	public fun getName ()Ljava/lang/String;
	public fun getParent ()Lio/embrace/opentelemetry/kotlin/tracing/model/SpanContext;
	public fun getResource ()Lio/embrace/opentelemetry/kotlin/resource/Resource;
	public fun getSpanContext ()Lio/embrace/opentelemetry/kotlin/tracing/model/SpanContext;
	public fun getSpanKind ()Lio/embrace/opentelemetry/kotlin/tracing/model/SpanKind;
	public fun getStartTimestamp ()J
	public fun getStatus ()Lio/embrace/opentelemetry/kotlin/tracing/StatusCode;
	public fun hasEnded ()Z
	public fun isRecording ()Z
	public fun links ()Ljava/util/List;
	public fun setBooleanAttribute (Ljava/lang/String;Z)V
	public fun setBooleanListAttribute (Ljava/lang/String;Ljava/util/List;)V
	public fun setDoubleAttribute (Ljava/lang/String;D)V
	public fun setDoubleListAttribute (Ljava/lang/String;Ljava/util/List;)V
	public fun setLongAttribute (Ljava/lang/String;J)V
	public fun setLongListAttribute (Ljava/lang/String;Ljava/util/List;)V
	public fun setName (Ljava/lang/String;)V
	public fun setStatus (Lio/embrace/opentelemetry/kotlin/tracing/StatusCode;)V
	public fun setStringAttribute (Ljava/lang/String;Ljava/lang/String;)V
	public fun setStringListAttribute (Ljava/lang/String;Ljava/util/List;)V
	public fun toSpanData ()Lio/embrace/opentelemetry/kotlin/tracing/data/SpanData;
}

public final class io/embrace/opentelemetry/kotlin/tracing/ReadableSpanImpl : io/embrace/opentelemetry/kotlin/tracing/model/ReadableSpan {
	public fun <init> (Ljava/lang/String;Lio/embrace/opentelemetry/kotlin/tracing/StatusCode;Ljava/lang/String;Lio/embrace/opentelemetry/kotlin/tracing/model/SpanContext;Lio/embrace/opentelemetry/kotlin/tracing/model/SpanContext;Lio/embrace/opentelemetry/kotlin/tracing/model/SpanKind;JLjava/lang/Long;Lio/embrace/opentelemetry/kotlin/resource/Resource;Lio/embrace/opentelemetry/kotlin/InstrumentationScopeInfo;Ljava/util/Map;Ljava/util/List;Ljava/util/List;Lkotlin/jvm/functions/Function0;)V
	public fun getAttributes ()Ljava/util/Map;
	public fun getDescription ()Ljava/lang/String;
	public fun getEndTimestamp ()Ljava/lang/Long;
	public fun getEvents ()Ljava/util/List;
	public fun getInstrumentationScopeInfo ()Lio/embrace/opentelemetry/kotlin/InstrumentationScopeInfo;
	public fun getLinks ()Ljava/util/List;
	public fun getName ()Ljava/lang/String;
	public fun getParent ()Lio/embrace/opentelemetry/kotlin/tracing/model/SpanContext;
	public fun getResource ()Lio/embrace/opentelemetry/kotlin/resource/Resource;
	public fun getSpanContext ()Lio/embrace/opentelemetry/kotlin/tracing/model/SpanContext;
	public fun getSpanKind ()Lio/embrace/opentelemetry/kotlin/tracing/model/SpanKind;
	public fun getStartTimestamp ()J
	public fun getStatus ()Lio/embrace/opentelemetry/kotlin/tracing/StatusCode;
	public fun hasEnded ()Z
	public fun toSpanData ()Lio/embrace/opentelemetry/kotlin/tracing/data/SpanData;
}

public final class io/embrace/opentelemetry/kotlin/tracing/SpanContextImpl : io/embrace/opentelemetry/kotlin/tracing/model/SpanContext {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Lio/embrace/opentelemetry/kotlin/tracing/model/TraceFlags;ZZLio/embrace/opentelemetry/kotlin/tracing/model/TraceState;)V
	public fun getSpanId ()Ljava/lang/String;
	public fun getTraceFlags ()Lio/embrace/opentelemetry/kotlin/tracing/model/TraceFlags;
	public fun getTraceId ()Ljava/lang/String;
	public fun getTraceState ()Lio/embrace/opentelemetry/kotlin/tracing/model/TraceState;
	public fun isRemote ()Z
	public fun isValid ()Z
}

public final class io/embrace/opentelemetry/kotlin/tracing/SpanEventImpl : io/embrace/opentelemetry/kotlin/attributes/AttributeContainer, io/embrace/opentelemetry/kotlin/tracing/model/SpanEvent {
	public fun <init> (Ljava/lang/String;JLio/embrace/opentelemetry/kotlin/attributes/AttributeContainer;)V
	public fun attributes ()Ljava/util/Map;
	public fun getName ()Ljava/lang/String;
	public fun getTimestamp ()J
	public fun setBooleanAttribute (Ljava/lang/String;Z)V
	public fun setBooleanListAttribute (Ljava/lang/String;Ljava/util/List;)V
	public fun setDoubleAttribute (Ljava/lang/String;D)V
	public fun setDoubleListAttribute (Ljava/lang/String;Ljava/util/List;)V
	public fun setLongAttribute (Ljava/lang/String;J)V
	public fun setLongListAttribute (Ljava/lang/String;Ljava/util/List;)V
	public fun setStringAttribute (Ljava/lang/String;Ljava/lang/String;)V
	public fun setStringListAttribute (Ljava/lang/String;Ljava/util/List;)V
}

